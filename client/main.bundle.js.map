{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Outfit Invite Helper\\n  </h1>\\n</div>\\n<form>\\n   \\t<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"nameInput\\\">\\n   \\t<input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"passwordInput\\\">\\n   \\t<button type=\\\"button\\\" (click)=\\\"onSubmit()\\\">login</button>\\n   \\t<button type=\\\"button\\\" (click)=\\\"onRefresh()\\\">refresh</button>\\n   \\t<button type=\\\"button\\\" (click)=\\\"onNoToken()\\\">ddddd</button>\\n   \\t<button type=\\\"button\\\" (click)=\\\"onRegister()\\\">reg</button>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'app';\n    name: string = 'name';\n    password: string = 'pwd';\n    token: string = 'no';\n    \n    constructor( private http: Http ) {\n        \n    }\n    onSubmit() {\n        this.http.post( '/auth/login', { name: this.name, password: this.password } ).toPromise().then( ( res: Response ) => {\n            let token = this.retrieveToken( res );\n            if( token ){\n                this.token = token;\n            }\n        } );\n    }\n    \n    onRefresh() {\n        let headers = new Headers( { 'Authorization': 'Bearer ' + this.token } );\n        let options = new RequestOptions( { headers: headers } );\n        this.http.get( '/auth/refresh', options ).toPromise().then( ( res )=>{\n            let token = this.retrieveToken( res );\n            if( token ){\n                this.token = token;\n            }\n        } ).catch( ( err ) => {\n            console.log( err );\n            console.log( 'e' );\n        } );\n    }\n    \n    onNoToken() {\n        this.http.get( '/auth/refresh' ).toPromise().then( ( res )=>{\n            console.log( res );\n        } );\n    }\n    \n    onRegister() {\n        let data = { name: this.name, password: this.password };\n        console.log( data );\n        this.http.post( '/auth/register', { name: this.name, password: this.password } )\n        .toPromise()\n        .then( ( res: Response ) => {\n            let token = this.retrieveToken( res );\n            if( token ){\n                this.token = token;\n            }\n            console.log( res );\n        } );\n    }\n    private retrieveToken( response: Response ): string {\n        let res: any = response.json();\n        let token: string = res.token;\n        return token;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [Location, {provide: LocationStrategy, useClass: PathLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}